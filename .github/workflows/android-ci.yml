# Workflow name
name: Release App

# When it will be triggered      
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version'
        required: true
        default: '1.0'
  #push:
  #  branches:
  #    - master
# Where it will run
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2
        
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
  
        # Cache Gradle dependencies and Gradle Wrapper
      - name: Setup Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
           ~/.gradle/caches
           ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew
  
      - name: Generate App Version Name
        run: echo "VERSION_NAME=$(git describe --tags | sed 's/\(.*\)-/\1./' | sed 's/\(.*\)-/\1+/')" >> $GITHUB_ENV
      
      - name: Bump Version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{ github.run_number }}
          versionName: ${{ env.VERSION_NAME }}
          
      
      - name: Restore keystore.jks
        run: echo $KEYSTORE_FILE | base64 -d > /app/keystore.jks
      
      - name: Build
        run: ./gradlew assembleRelease
          -PKEYSTORE_FILE="../app/keystore.jks"
          -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          -PSIGNING_KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          -PSIGNING_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
        
      - name: Release
        id: create_release
        uses: actions/create-release@v1
        with:
          release_name: Release v.${{ env.VERSION_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    
 